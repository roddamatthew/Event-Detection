import pytest

from scapy.packet import Raw
from scapy_artemissbs.layers import ArtemisSBSStream, ArtemisSBS, EngSetCoolant


class TestInit:
    @pytest.mark.parametrize(
        "bytes_, n_packets",
        [
            (
                b"\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde@\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\xf9=\x80\x80\x05\xe8\x08\x00\x00\x84\x1b\x00\x00\x00\x00\x002\xc9\xfe>\xe4-\x8eGf{\xb6\xb4\xb2\x19\x0cG='\x9c:}\xff\xfb>\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde4\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\xf9=\x80\x80\x05\xf1\x08\x00\x00\x04\x11\x00\x00\x00\x00\x00.$E?\xabqT\xc3!\\%\xbf\x00\x00\x00\x00\xef\xbe\xad\xde,\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xf9=\x80\x80\x05\xf2\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00\x0b\xe6$\xc3\x00\x00\x00\x00\xef\xbe\xad\xde0\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\xf9=\x80\x80\x05\xf3\x08\x00\x00\x00\t\x00\x00\x00\x00\x00\x81#%\xc3:\xf4\xd5\x81\x00\x00\x00\x00\xef\xbe\xad\xde,\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xf9=\x80\x80\x05\xf4\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00C\x1b%\xc3\x00\x00\x00\x00\xef\xbe\xad\xde0\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\xf9=\x80\x80\x05\xf5\x08\x00\x00\x00\x01\x01\x00\x00\x00\x00\xfa\xf0%\xc3\xafZ\x1bC\x00\x00\x00\x00\xef\xbe\xad\xde,\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xf9=\x80\x80\x05\xf6\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00R\xd4$\xc3\x00\x00\x00\x00\xef\xbe\xad\xde0\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\xf9=\x80\x80\x05\xf7\x08\x00\x00\x00\t\x00\x00\x00\x00\x00EQ%\xc3\xed\xd5\xf7\x87\x00\x00\x00\x00\xef\xbe\xad\xde,\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xf9=\x80\x80\x05\xf8\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00\xca~%\xc3\x00\x00\x00\x00\xef\xbe\xad\xde0\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\xf9=\x80\x80\x05\xf9\x08\x00\x00\x00\t\x00\x00\x00\x00\x00\rY%\xc33\x1b*\x1e\x00\x00\x00\x00\xef\xbe\xad\xde,\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xf9=\x80\x80\x05\xfa\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00)\xeb%\xc3\x00\x00\x00\x00\xef\xbe\xad\xde8\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\xf9=\x80\x80\x05\x19\n\x00\x00\x84\x18\x00\x00\x00\x00\x00P\xee\xff>\x99\xc5UG\xaf\x8b\xcf8DF\xc9\xbf\x00\x00\x00\x00\xef\xbe\xad\xdeH\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\xf9=\x80\x80\x05\x04\t\x00\x00\x84\x1b\x05\x00\x00\x00\x00l\xb8/?\x0c\xc3\xf4F:\xe1\xad\xc3\x10\xe2\x96G\x1e6\x04\xbf\x9e\x13)@\xc1\xfej@\x19\xdb\x9c@\x00\x00\x00\x00\xef\xbe\xad\xde'\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\xf9=\x80\x80\x06\xbb\x07\x00\x00\x02\x00\xb7\xa5\xa7C\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00\xef\xbe\xad\xde\x9c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\xf9=\x80\x80\x0f\xb2\x07\x00\x00'\x00\x00\xa8\xectG\xbd\x9cjAmz\x1aG1Y\xa8\xae\x0f\xb3\x07\x00\x00'\x00\x00\xd0AuGK\xb3jA\x08\x95\x1bG\xab1w\xae\x0f\xb6\x07\x00\x00'\x00\x00\x14ytG\n\x85jA6\x95\x1aG+\xa7\xce\xae\x0f\xb7\x07\x00\x00'\x00\x00\x06\xc5tG\x83\x96jA<\xd6\x1aG\x9d\xd1\xad\xae\x0f\xb8\x07\x00\x00\x05\x00\x00L\x83\xeeE\xd3\xe2\xfaF\x0f\x7f\t\x00\x00P\x00\x00Z\x99\xde?\xc18,C\x00\x00\x00\x00\xef\xbe\xad\xde\x1c\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\xf9=\x80\x80\x00\x00\x00\x00",
                26,
            ),
        ],
    )
    def test_examples(self, bytes_, n_packets):
        packet = ArtemisSBSStream(bytes_)
        assert len(packet.packets) == n_packets

    @pytest.mark.parametrize(
        "bytes_, packet",
        [
            (
                b"\xef\xbe\xad\xde,\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\xd9\x01\xcci\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xef\xbe\xad\xde",
                ArtemisSBSStream(
                    packets=[
                        ArtemisSBS(
                            header=0xDEADBEEF,
                            len=44,
                            origin="client",
                            padding=0,
                            remaining=24,
                            internal_type="valueFourInts",
                            internal_subtype=0x0,
                            type="EngSetCoolant",
                        )
                        / EngSetCoolant(
                            ship_system="beams", value=1, unknown1=0, unknown2=0
                        ),
                        Raw(load=b"\xef\xbe\xad\xde"),
                    ]
                ),
            ),
        ],
    )
    def test_examples(self, bytes_, packet):
        assert ArtemisSBSStream(bytes_) == packet
